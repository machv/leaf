//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LeafWeb.LeafService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tree", Namespace="http://schemas.datacontract.org/2004/07/Leaf.Logic")]
    [System.SerializableAttribute()]
    public partial class Tree : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ConfidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DruhoveCzechField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DruhoveLatinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RodoveCzechField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RodoveLatinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Confidence {
            get {
                return this.ConfidenceField;
            }
            set {
                if ((this.ConfidenceField.Equals(value) != true)) {
                    this.ConfidenceField = value;
                    this.RaisePropertyChanged("Confidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DruhoveCzech {
            get {
                return this.DruhoveCzechField;
            }
            set {
                if ((object.ReferenceEquals(this.DruhoveCzechField, value) != true)) {
                    this.DruhoveCzechField = value;
                    this.RaisePropertyChanged("DruhoveCzech");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DruhoveLatin {
            get {
                return this.DruhoveLatinField;
            }
            set {
                if ((object.ReferenceEquals(this.DruhoveLatinField, value) != true)) {
                    this.DruhoveLatinField = value;
                    this.RaisePropertyChanged("DruhoveLatin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RodoveCzech {
            get {
                return this.RodoveCzechField;
            }
            set {
                if ((object.ReferenceEquals(this.RodoveCzechField, value) != true)) {
                    this.RodoveCzechField = value;
                    this.RaisePropertyChanged("RodoveCzech");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RodoveLatin {
            get {
                return this.RodoveLatinField;
            }
            set {
                if ((object.ReferenceEquals(this.RodoveLatinField, value) != true)) {
                    this.RodoveLatinField = value;
                    this.RaisePropertyChanged("RodoveLatin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LeafService.ILeafService")]
    public interface ILeafService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeafService/Recognize", ReplyAction="http://tempuri.org/ILeafService/RecognizeResponse")]
        LeafWeb.LeafService.Tree[] Recognize(string picture, int noAnswers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeafService/GetTrees", ReplyAction="http://tempuri.org/ILeafService/GetTreesResponse")]
        LeafWeb.LeafService.Tree[] GetTrees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeafService/AddTree", ReplyAction="http://tempuri.org/ILeafService/AddTreeResponse")]
        int AddTree(string czRodove, string czDruhove, string ltRodove, string ltDruhove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeafService/Learn", ReplyAction="http://tempuri.org/ILeafService/LearnResponse")]
        bool Learn(int treeID, string picture);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeafServiceChannel : LeafWeb.LeafService.ILeafService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeafServiceClient : System.ServiceModel.ClientBase<LeafWeb.LeafService.ILeafService>, LeafWeb.LeafService.ILeafService {
        
        public LeafServiceClient() {
        }
        
        public LeafServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LeafServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeafServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeafServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LeafWeb.LeafService.Tree[] Recognize(string picture, int noAnswers) {
            return base.Channel.Recognize(picture, noAnswers);
        }
        
        public LeafWeb.LeafService.Tree[] GetTrees() {
            return base.Channel.GetTrees();
        }
        
        public int AddTree(string czRodove, string czDruhove, string ltRodove, string ltDruhove) {
            return base.Channel.AddTree(czRodove, czDruhove, ltRodove, ltDruhove);
        }
        
        public bool Learn(int treeID, string picture) {
            return base.Channel.Learn(treeID, picture);
        }
    }
}
